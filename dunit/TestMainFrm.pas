unit TestMainFrm;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, StdCtrls, TBXTristanTheme, TBXOffice11XPTheme, Dictionary, TBX, 
  TBXWhidbeyTheme, TB2Dock, BaseForm, ad3Ignore, ad3ParserBase, ad3SpellBase, TNTClasses, 
  SpTBXEditors, FileMonitor, ad3Configuration, TBXOffice11AdaptiveTheme, TNTSysUtils, 
  TBXDkPanels, SpTBXItem, Forms, TB2Item, TBXAthenTheme, TBXNexos4Theme, UndoList, 
  TBXMonaiTheme, TBXStripesTheme, TBXNewOfficeTheme, TBXOfficeCTheme, TBXStatusBars, 
  Graphics, AppOptions, TBXNexos2Theme, TBXUxThemes, TBXLists, TntStdActns, TntComCtrls, 
  TBXOfficeKTheme, TBXNexos5Theme, MainFrm, TB2MRU, TBXDreamTheme, ComCtrls, 
  TBXDefaultTheme, TBXEosTheme, Dialogs, TB2ToolWindow, TBXTristan2Theme, WideIniFiles, 
  TBXToolPals, TBXNewOfficeAdaptiveTheme, EncodingDlgs, TntActnList, FindReplaceFrm, 
  Windows, Controls, TBXExtItems, TBXXitoTheme, TBXSwitcher, TB2Toolbar, TBXNexosXTheme, 
  TBXNexos3Theme, ActnList, TBXReliferTheme, Classes, TBXZezioTheme, TBXDefaultXPTheme, 
  TBXMonaiXPTheme, ToolItems, ad3ConfigurationDialogCtrl, ad3Spell, Messages, 
  TBXAluminumTheme, TBXRomaTheme, TB2ExtItems, TBXOffice2007Theme, TntDialogs, 
  ad3SpellLanguages, TntStdCtrls, TranslateFile, Menus, ImgList, ExtCtrls, 
  TBXSentimoXTheme, SysUtils, AppConsts, TntExtCtrls, StdActns, MsgTranslate, 
  TBXOfficeXPTheme, TransIntf, SpTBXControls;
type
  // Test methods for class TfrmMain
  
  TestTfrmMain = class(TTestCase)
  strict private
    FfrmMain: TfrmMain;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestFormCreate;
    procedure TestFormCloseQuery;
    procedure TestlvTranslateStringsChange;
    procedure TestreTranslationExit;
    procedure TestlvTranslateStringsData;
    procedure TestacExitExecute;
    procedure TestacOpenOrigExecute;
    procedure TestacOpenTransExecute;
    procedure TestacSaveTransExecute;
    procedure TestacSaveTransAsExecute;
    procedure TestacPrevExecute;
    procedure TestacNextExecute;
    procedure TestacCopyFromOriginalExecute;
    procedure TestreTranslationEnter;
    procedure TestacAboutExecute;
    procedure TestlvTranslateStringsEnter;
    procedure TestacToggleFocusExecute;
    procedure TestacFocusTranslationExecute;
    procedure TestacFindExecute;
    procedure TestacFindNextExecute;
    procedure TestacReplaceExecute;
    procedure TestlvTranslateStringsAdvancedCustomDrawItem;
    procedure TestacNextUntranslatedExecute;
    procedure TestacPrevUntranslatedExecute;
    procedure TestacFocusListViewExecute;
    procedure TestacFocusOriginalExecute;
    procedure TestacShowQuotesExecute;
    procedure TestalMainUpdate;
    procedure TestlvTranslateStringsColumnClick;
    procedure TestacRestoreSortExecute;
    procedure TestpnlBottomResize;
    procedure TestacDictSaveExecute;
    procedure TestacDictLoadExecute;
    procedure TestacDictCreateExecute;
    procedure TestacDictTranslateExecute;
    procedure TestacDictInvertExecute;
    procedure TestacDictAddExecute;
    procedure TestacHelpExecute;
    procedure TestlvTranslateStringsDataFind;
    procedure TestacNewTransExecute;
    procedure TestacCreateTranslationFileExecute;
    procedure TestacCopyAllFromOrigExecute;
    procedure TestacViewDetailsExecute;
    procedure TestacPasteUpdate;
    procedure TestreTranslationKeyDown;
    procedure TestacCopyFromNameExecute;
    procedure TestacPreferencesExecute;
    procedure TestacViewCommentsExecute;
    procedure TestacAsciiValuesExecute;
    procedure TestlvTranslateStringsInfoTip;
    procedure TestMRUFilesClick;
    procedure TestacClearMRUExecute;
    procedure TestacClearInvalidMRUExecute;
    procedure TestmnuFileSelect;
    procedure TestacFindUnmatchedShortCutExecute;
    procedure TestacHomeExecute;
    procedure TestacEndExecute;
    procedure TestacPageUpExecute;
    procedure TestacPageDownExecute;
    procedure TestGotoBookmarkExecute;
    procedure TestToggleBookmarkExecute;
    procedure TestacClearAllTranslationsExecute;
    procedure TestacReplaceEverywhereExecute;
    procedure TestacNextSuspiciousExecute;
    procedure TestacViewOrphansExecute;
    procedure TestacCutExecute;
    procedure TestacCopyExecute;
    procedure TestacPasteExecute;
    procedure TestacSelectAllExecute;
    procedure TestacUndoExecute;
    procedure TestacSaveOrigAsExecute;
    procedure TestacConfigureKeyboardExecute;
    procedure TestacImportExecute;
    procedure TestacExportExecute;
    procedure TestacToggleTranslatedExecute;
    procedure TestacTestExceptionHandlerExecute;
    procedure TestacFullScreenExecute;
    procedure TestpopEditPopup;
    procedure TestacToolsCustomizeExecute;
    procedure TestacAddItemExecute;
    procedure TestacEditItemExecute;
    procedure TestacDeleteItemExecute;
    procedure TestacSaveOriginalExecute;
    procedure TestlvTranslateStringsDblClick;
    procedure TestacConfigSuspiciousExecute;
    procedure TestacDictEditExecute;
    procedure TestmnuPluginsPopup;
    procedure TestacMakeConsistentExecute;
    procedure TestmnuToolsPopup;
    procedure TestBeginUpdate;
    procedure TestEndUpdate;
    procedure TestTranslate;
  end;

implementation

procedure TestTfrmMain.SetUp;
begin
  FfrmMain := TfrmMain.Create(nil);
end;

procedure TestTfrmMain.TearDown;
begin
  FfrmMain.Free;
  FfrmMain := nil;
end;

procedure TestTfrmMain.TestFormCreate;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.FormCreate(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestFormCloseQuery;
var
  CanClose: Boolean;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.FormCloseQuery(Sender, CanClose);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsChange;
var
  Change: TItemChange;
  Item: TListItem;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsChange(Sender, Item, Change);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestreTranslationExit;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.reTranslationExit(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsData;
var
  Item: TListItem;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsData(Sender, Item);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacExitExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acExitExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacOpenOrigExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acOpenOrigExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacOpenTransExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acOpenTransExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacSaveTransExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acSaveTransExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacSaveTransAsExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acSaveTransAsExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPrevExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPrevExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacNextExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acNextExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacCopyFromOriginalExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acCopyFromOriginalExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestreTranslationEnter;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.reTranslationEnter(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacAboutExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acAboutExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsEnter;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsEnter(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacToggleFocusExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acToggleFocusExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFocusTranslationExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFocusTranslationExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFindExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFindExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFindNextExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFindNextExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacReplaceExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acReplaceExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsAdvancedCustomDrawItem;
var
  DefaultDraw: Boolean;
  Stage: TCustomDrawStage;
  State: TCustomDrawState;
  Item: TListItem;
  Sender: TCustomListView;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsAdvancedCustomDrawItem(Sender, Item, State, Stage, 
      DefaultDraw);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacNextUntranslatedExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acNextUntranslatedExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPrevUntranslatedExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPrevUntranslatedExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFocusListViewExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFocusListViewExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFocusOriginalExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFocusOriginalExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacShowQuotesExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acShowQuotesExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestalMainUpdate;
var
  Handled: Boolean;
  Action: TBasicAction;
begin
  // TODO: Setup method call parameters
  FfrmMain.alMainUpdate(Action, Handled);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsColumnClick;
var
  Column: TListColumn;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsColumnClick(Sender, Column);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacRestoreSortExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acRestoreSortExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestpnlBottomResize;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.pnlBottomResize(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictSaveExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictSaveExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictLoadExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictLoadExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictCreateExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictCreateExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictTranslateExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictTranslateExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictInvertExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictInvertExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictAddExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictAddExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacHelpExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acHelpExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsDataFind;
var
  Index: Integer;
  Wrap: Boolean;
  Direction: TSearchDirection;
  StartIndex: Integer;
  FindData: Pointer;
  FindPosition: TPoint;
  FindString: WideString;
  Find: TItemFind;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsDataFind(Sender, Find, FindString, FindPosition, 
      FindData, StartIndex, Direction, Wrap, Index);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacNewTransExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acNewTransExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacCreateTranslationFileExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acCreateTranslationFileExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacCopyAllFromOrigExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acCopyAllFromOrigExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacViewDetailsExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acViewDetailsExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPasteUpdate;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPasteUpdate(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestreTranslationKeyDown;
var
  Shift: TShiftState;
  Key: Word;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.reTranslationKeyDown(Sender, Key, Shift);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacCopyFromNameExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acCopyFromNameExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPreferencesExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPreferencesExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacViewCommentsExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acViewCommentsExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacAsciiValuesExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acAsciiValuesExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsInfoTip;
var
  InfoTip: string;
  Item: TListItem;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsInfoTip(Sender, Item, InfoTip);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestMRUFilesClick;
var
  FileName: string;
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.MRUFilesClick(Sender, FileName);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacClearMRUExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acClearMRUExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacClearInvalidMRUExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acClearInvalidMRUExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestmnuFileSelect;
var
  Selecting: Boolean;
  Viewer: TTBItemViewer;
  Sender: TTBCustomItem;
begin
  // TODO: Setup method call parameters
  FfrmMain.mnuFileSelect(Sender, Viewer, Selecting);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFindUnmatchedShortCutExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFindUnmatchedShortCutExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacHomeExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acHomeExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacEndExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acEndExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPageUpExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPageUpExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPageDownExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPageDownExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestGotoBookmarkExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.GotoBookmarkExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestToggleBookmarkExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.ToggleBookmarkExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacClearAllTranslationsExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acClearAllTranslationsExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacReplaceEverywhereExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acReplaceEverywhereExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacNextSuspiciousExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acNextSuspiciousExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacViewOrphansExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acViewOrphansExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacCutExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acCutExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacCopyExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acCopyExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacPasteExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acPasteExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacSelectAllExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acSelectAllExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacUndoExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acUndoExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacSaveOrigAsExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acSaveOrigAsExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacConfigureKeyboardExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acConfigureKeyboardExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacImportExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acImportExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacExportExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acExportExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacToggleTranslatedExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acToggleTranslatedExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacTestExceptionHandlerExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acTestExceptionHandlerExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacFullScreenExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acFullScreenExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestpopEditPopup;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.popEditPopup(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacToolsCustomizeExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acToolsCustomizeExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacAddItemExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acAddItemExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacEditItemExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acEditItemExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDeleteItemExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDeleteItemExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacSaveOriginalExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acSaveOriginalExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestlvTranslateStringsDblClick;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.lvTranslateStringsDblClick(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacConfigSuspiciousExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acConfigSuspiciousExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacDictEditExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acDictEditExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestmnuPluginsPopup;
var
  FromLink: Boolean;
  Sender: TTBCustomItem;
begin
  // TODO: Setup method call parameters
  FfrmMain.mnuPluginsPopup(Sender, FromLink);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestacMakeConsistentExecute;
var
  Sender: TObject;
begin
  // TODO: Setup method call parameters
  FfrmMain.acMakeConsistentExecute(Sender);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestmnuToolsPopup;
var
  FromLink: Boolean;
  Sender: TTBCustomItem;
begin
  // TODO: Setup method call parameters
  FfrmMain.mnuToolsPopup(Sender, FromLink);
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestBeginUpdate;
var
  ReturnValue: Integer;
begin
  ReturnValue := FfrmMain.BeginUpdate;
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestEndUpdate;
var
  ReturnValue: Integer;
begin
  ReturnValue := FfrmMain.EndUpdate;
  // TODO: Validate method results
end;

procedure TestTfrmMain.TestTranslate;
var
  ReturnValue: WideString;
  Value: WideString;
  Name: WideString;
  Section: WideString;
begin
  // TODO: Setup method call parameters
  ReturnValue := FfrmMain.Translate(Section, Name, Value);
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTfrmMain.Suite);
end.

